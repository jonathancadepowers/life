# Generated by Django 4.2.25 on 2025-10-28 14:30

from django.db import migrations


def fix_goal_id_type(apps, schema_editor):
    """
    Fix goal_id field type from INTEGER to VARCHAR.
    SQLite doesn't support altering primary keys, so we need to recreate the table.
    """
    if schema_editor.connection.vendor != 'sqlite':
        # This fix is only needed for SQLite
        return

    with schema_editor.connection.cursor() as cursor:
        # Step 0: Disable foreign key checks temporarily
        cursor.execute("PRAGMA foreign_keys = OFF")

        # Step 1: Back up existing data
        cursor.execute("""
            CREATE TEMPORARY TABLE goals_goal_backup AS
            SELECT goal_id, display_string, created_at, updated_at
            FROM goals_goal
        """)

        # Step 2: Drop the old table
        cursor.execute("DROP TABLE goals_goal")

        # Step 3: Recreate with correct schema (goal_id as VARCHAR, not INTEGER)
        cursor.execute("""
            CREATE TABLE goals_goal (
                goal_id VARCHAR(255) NOT NULL PRIMARY KEY,
                display_string VARCHAR(255) NOT NULL,
                created_at DATETIME NOT NULL,
                updated_at DATETIME NOT NULL
            )
        """)

        # Step 4: Restore data (converting integer IDs to strings)
        cursor.execute("""
            INSERT INTO goals_goal (goal_id, display_string, created_at, updated_at)
            SELECT CAST(goal_id AS TEXT), display_string, created_at, updated_at
            FROM goals_goal_backup
        """)

        # Step 5: Drop backup table
        cursor.execute("DROP TABLE goals_goal_backup")

        # Step 6: Re-enable foreign key checks
        cursor.execute("PRAGMA foreign_keys = ON")


class Migration(migrations.Migration):

    dependencies = [
        ('goals', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(fix_goal_id_type, reverse_code=migrations.RunPython.noop),
    ]
